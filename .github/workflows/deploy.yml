name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

    - name: Authenticate Docker to Google Container Registry
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > /tmp/gcloud.json
        gcloud auth activate-service-account --key-file=/tmp/gcloud.json
        gcloud auth configure-docker

    - name: Build and Push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/proyecto-parkings-backend-api:$GITHUB_SHA .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/proyecto-parkings-backend-api:$GITHUB_SHA

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy proyecto-parkings-backend-api \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/proyecto-parkings-backend-api:$GITHUB_SHA \
          --platform managed \
          --region ${{ secrets.CLOUD_RUN_REGION }} \
          --set-env-vars GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }} \
          --set-env-vars DATABASE_USER=${{ secrets.DATABASE_USER }} \
          --set-env-vars DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
          --set-env-vars DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
          --set-env-vars DATABASE_INSTANCE_CONNECTION_NAME=${{ secrets.DATABASE_INSTANCE_CONNECTION_NAME }} \
          --set-env-vars ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} \
          --set-env-vars ALGORITHM=${{ secrets.ALGORITHM }} \
          --set-env-vars SECRET_KEY=${{ secrets.SECRET_KEY }} \

    - name: Cleanup
      run: |
        rm /tmp/gcloud.json
